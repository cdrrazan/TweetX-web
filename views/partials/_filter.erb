<!--
  TweetX Filter Partial
  Provides filtering controls for tweets (ID, search, category)
-->
<% base_path, anchor = path.split('#') %>

<form id="filter-form" class="row row-cols-1 row-cols-md-5 g-2 align-items-end mb-3" data-path="<%= base_path %>" data-anchor="<%= anchor %>">

  <!-- ID Filter -->
  <div class="col">
    <input type="text" name="id" value="<%= params[:id] %>" class="form-control" placeholder="Filter by ID">
  </div>

  <!-- Search Filter -->
  <div class="col">
    <input type="text" name="search" value="<%= params[:search] %>" class="form-control" placeholder="Search tweet text">
  </div>

  <!-- Category Dropdown -->
  <div class="col">
    <select name="category" class="form-select">
      <option value="">All Categories</option>
      <% @categories.each do |category| %>
        <option value="<%= category %>" <%= 'selected' if params[:category] == category %>><%= category.capitalize %></option>
      <% end %>
    </select>
  </div>

  <!-- Filter Button -->
  <div class="col d-grid">
    <button type="submit" class="btn btn-success w-100 d-flex justify-content-center align-items-center gap-2">
      <span class="d-none d-md-inline">🔍</span> Filter
    </button>
  </div>

  <!-- Reset Button -->
  <div class="col d-grid">
    <button type="button" id="reset-btn" class="btn btn-outline-secondary w-100 d-flex justify-content-center align-items-center gap-2" onclick="resetFilters('<%= anchor %>')">
      <span class="d-none d-md-inline">🔄</span> Reset
    </button>
  </div>

</form>

<!-- Loading Spinner -->
<div id="loading-spinner" class="text-center my-3" style="display: none;">
  <div class="spinner-border text-primary spinner-border-sm" role="status">
    <span class="visually-hidden">Loading...</span>
  </div>
</div>

<!-- JavaScript for filter functionality -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('filter-form');
    const spinner = document.getElementById('loading-spinner');

    form.addEventListener('submit', function (e) {
      e.preventDefault();

      const basePath = form.dataset.path;
      const anchor = form.dataset.anchor;
      const inputs = Array.from(form.querySelectorAll('input, select'));
      const params = new URLSearchParams();

      inputs.forEach(input => {
        if (input.name && input.value.trim() !== '') {
          params.append(input.name, input.value.trim());
        }
      });

      const queryString = params.toString();
      let url = `${basePath}${queryString ? '?' + queryString : ''}`;

      // If on dashboard, keep anchor
      if (anchor && (window.location.pathname === '/dashboard')) {
        url += `#${anchor}`;
      }

      // Replace URL without reloading page
      history.replaceState(null, '', url);

      // Show spinner and fade out table
      if (spinner) {
        spinner.style.display = 'block';
      }

      const tableContainer = document.querySelector('.card-body');
      if (tableContainer) {
        tableContainer.style.opacity = 0.2;
      }

      window.scrollTo({ top: 0, behavior: 'smooth' });

      // Reload after short delay
      setTimeout(() => {
        location.reload();
      }, 400);
    });

    if (window.location.hash) {
      const hash = window.location.hash;
      const el = document.querySelector(hash);
      if (el) {
        history.scrollRestoration = 'manual';
      }
    }
  });

  function resetFilters(anchor) {
    const base = window.location.pathname;
    let url = base;

    if (anchor && window.location.pathname === '/dashboard') {
      url += `#${anchor}`;
    }

    history.replaceState(null, '', url);

    const spinner = document.getElementById('loading-spinner');
    if (spinner) {
      spinner.style.display = 'block';
    }

    const tableContainer = document.querySelector('.card-body');
    if (tableContainer) {
      tableContainer.style.opacity = 0.2;
    }

    setTimeout(() => {
      window.location.reload();
    }, 400);
  }
</script>
