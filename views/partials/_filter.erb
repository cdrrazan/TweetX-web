<% base_path, anchor = path.split('#') %>
<form id="filter-form" class="row g-2 mb-3" data-path="<%= base_path %>" data-anchor="<%= anchor %>">
  <div class="col-md-3">
    <input type="text" name="id" value="<%= params[:id] %>" class="form-control" placeholder="Filter by ID">
  </div>
  <div class="col-md-3">
    <input type="text" name="search" value="<%= params[:search] %>" class="form-control" placeholder="Search tweet text">
  </div>
  <div class="col-md-3">
    <select name="category" class="form-select">
      <option value="">All Categories</option>
      <% @categories.each do |category| %>
        <option value="<%= category %>" <%= 'selected' if params[:category] == category %>><%= category.capitalize %></option>
      <% end %>
    </select>
  </div>
  <div class="col-md-3 d-grid">
    <button type="submit" class="btn btn-outline-primary">üîç Apply Filters</button>
  </div>

  <button type="button" class="btn btn-sm btn-link" onclick="resetFilters('<%= anchor %>')">üîÑ Reset Filters</button>
</form>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('filter-form');

    form.addEventListener('submit', function (e) {
      e.preventDefault();

      const basePath = form.dataset.path;
      const anchor = form.dataset.anchor;
      const inputs = Array.from(form.querySelectorAll('input, select'));
      const params = new URLSearchParams();

      inputs.forEach(input => {
        if (input.name && input.value.trim() !== '') {
          params.append(input.name, input.value.trim());
        }
      });

      const queryString = params.toString();
      const url = `${basePath}${queryString ? '?' + queryString : ''}#${anchor}`;

      // Replace state without scrolling
      history.replaceState(null, '', url);

      // Reload the page without jumping
      window.scrollTo({ top: 0, behavior: 'instant' });
      location.reload();
    });

    // Prevent auto-scroll on hash
    if (window.location.hash) {
      const hash = window.location.hash;
      const el = document.querySelector(hash);
      if (el) {
        // Prevent scroll to anchor after reload
        history.scrollRestoration = 'manual';
      }
    }
  });

  function resetFilters(anchor) {
    const base = window.location.pathname;
    const hash = anchor ? `#${anchor}` : '';
    // Replace the URL without scrolling
    history.replaceState(null, '', base + hash);
    // Reload the page
    window.location.reload();
  }
</script>
